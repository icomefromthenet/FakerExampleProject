<?xml version="1.0"?>

<!--
 Opening Schema Tag
 
 Set a default locale en all nodes will inherit this locale, but it can be overriden in child nodes

-->
<schema name="sakila" locale="en">
 
 <!--
 First Writers target is the mysql platform and will output using the SQL formatter and produce
 text files with SQL insert statements, The singleFileMode as been enabled, this will stop
 the writer from splitting the output into seperate files.
 
 Second Writers target is the mysql plaform and will output into phpunit xml fixtures.
 -->
 <writer platform="mysql" format="sql" singleFileMode="true" />
 <writer platform="mysql" format="phpunit" />
 
 
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  City Table
  
  Using the City Type which provides a list of Large Cities from geonames database,
  you can limit countries which the cities are accessed from, using the ISO 2  digit code 
  link : https://github.com/icomefromthenet/Faker/blob/master/docs/types/city.md
  
  Using our First Foreign Key below, to country table we can generate as many cities and have a valid reference to
  a country.
  
  The table order is automatic when using the `crc` option (circular reference check and reorder). If your not using this
  option, make sure tables are in best order so that foreign key tables are AFTER tables with none.
  really recommend using the generate option in these cases.
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="city" generate="100">
  <column name="city_id" type="smallint">
   <datatype name="autoincrement">
   </datatype>
  </column>
  <column name="country_id" type="smallint">
   <foreign-key name="city.country" foreignColumn="country_id" foreignTable ="country" />
  </column>
  <column name="city" type="string">
   <datatype name="city">
     <option name="countries" value="AU,GB" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="date">
    <option name="start" value="today" />
    <option name="modify" value="+10 minutes" />
   </datatype>
  </column>
  
  <!--
  Example of Foreign Key Circular Reference 
  
   <column name="fk_id" type="smallint">
     <foreign-key name="city.address" foreignColumn="address_id" foreignTable="address" />
   </column> -->
  
 </table>
 
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Actor Table
  
  Using the People Type which provides a list of english names
  the format property allows you to specify which part of the name
  should be used {fname},{lname},{inital}
  link : https://github.com/icomefromthenet/Faker/blob/master/docs/types/people.md
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="actor" generate="100">
  <column name="actor_id" type="smallint">
   <datatype name="autoincrement">
   </datatype>
  </column>
  <column name="first_name" type="string">
   <datatype name="people">
    <option name="format" value="{fname}" />
   </datatype>
  </column>
  <column name="last_name" type="string">
   <datatype name="people">
    <option name="format" value="{lname}" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="date">
     <option name="start" value="today" />
     <option name="modify" value="+1 day" />
     <option name="max" value="today +10 weeks" />
   </datatype>
  </column>
 </table>
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Country Table
  
  Using the Country Type which provides a list of ISO Countries,
  you can limit which countries are listed see link below on how.
  link : https://github.com/icomefromthenet/Faker/blob/master/docs/types/country.md
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="country" generate="10">
  <column name="country_id" type="smallint">
   <datatype name="autoincrement">
   </datatype>
  </column>
  <column name="country" type="string">
   <datatype name="country">
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="date">
    <option name="start" value="today" />
    <option name="modify" value="+1 hour" />
   </datatype>
   
  </column>  

  <!--
  The Following would cause a Circular Reference Error when the extra compiler check is enabled.
  
  <column name="city_id" type="integer">
    <foreign-key name="city.country" foreignColumn="country_id" foreignTable="city" />
  </column> 
  -->
  
  <!--
  The Following would cause a Circular Reference Error when the extra compiler check is enabled.

  <column name="city_id" type="smallint">
   <foreign-key name="country.address" foreignColumn="address_id" foreignTable="address" />
  </column>
    -->
  
 </table>
 
 
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Address Table
  
  Using a GeneratorSeed, This remove the random nature of the generated data.
  Running this script again will produce the same results for this table.
  If you add column between generations, that will change the script.
  You can seed a column and a type to make sure adding columns won't change the result.
  
  If your using Faker to make phpunit fixtures, it helpful to know that the 10 row always have same address string.
  
  
  In you own types to keep this deterministic property, use the provide random generator not
  php global random.
  
  For php distributions that include Soushin Security patch ( they all did php version < 5.4), then need
  to use the `mersenne` not the default. That Path prevents seeding of built in php number generators, I supplied one.
  
  Using First Foreign Keys, remmember to always put primary tables above the children.
  If the primary tables don't generate first we have nothing to use in the children.
  
  Also using the numeric type for postcodes, and using random selector to support different formats (Australian codes)
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="address" generate="100" generatorSeed="100" randomGenerator="mersenne">
  
  <!-- Auto Incrementing Integer -->
  <column name="address_id" type="smallint">
   <datatype name="autoincrement">
   </datatype>
  </column>
  
  <!-- Foreign Key with City Table -->
  <column name="city_id" type="smallint">
   <foreign-key name="address.city" foreignColumn="city_id" foreignTable="city" />
  </column>
  
  <!-- Example Address [number] [street name] [street_type] -->
  <column name="address" type="string">
   <!-- Combine DataTypes -->
   
   <!-- [number] -->
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
   
   <!-- [ ] -->
   <datatype name="constant_string">
     <option name="value" value=" " />
   </datatype>
   
   <!-- [street_name ] -->
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
   
   <!-- [ ] -->
   <datatype name="constant_string">
     <option name="value" value=" " />
   </datatype>
   
   <!-- [street_type] -->
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  
  </column>
  
  <!-- Example Address2 [suburb] -->
  <column name="address2" type="string">
   
   <!-- [suburb] --> 
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  
  </column>
  
  <!-- State [nsw|qld|wa|vic|act|tas|sa|nt] -->
  <column name="district" type="string">
    <!-- Pick one constant at random -->
   <random>
    <datatype name="constant_string">
     <option name="value" value="nsw" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="qld" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="wa" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="vic" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="act" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="tas" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="sa" />
    </datatype>
    <datatype name="constant_string">
     <option name="value" value="nt" />
    </datatype>
   </random>
  </column>
  
  <column name="postal_code" type="string">
    
    <!--
    Each there are a couple of fixed formats for Australian postcodes
    the random element will pick on of the formats at random for each generator pass,
    since the selector uses the buildin number generator the select will be deterministic.
    -->
    <random>
      <!-- NSW Codes --> 
      <datatype name="numeric">
          <option name="format" value="2XXX" />
      </datatype>
      <!-- QLD Codes --> 
      <datatype name="numeric">
          <option name="format" value="4XXX" />
      </datatype>
      <!-- VIC /TAS Codes --> 
      <datatype name="numeric">
          <option name="format" value="3XXX" />
      </datatype>
      <!-- WA Codes --> 
      <datatype name="numeric">
          <option name="format" value="6XXX" />
      </datatype>
      <!-- SA Codes --> 
      <datatype name="numeric">
          <option name="format" value="7XXX" />
      </datatype>
      <!-- Other --> 
      <datatype name="numeric">
          <option name="format" value="0XXX" />
      </datatype>
    </random>
  </column>
  
  <!-- Phone number -->
  <column name="phone" type="string">
   
   <!--
    Where using the alphanumeric because it will produce a string value (column is a string not number), if
    we used numeric it would cast the value into string have unexpected results.
   -->
   <datatype name="alphanumeric">
    <option name="format" value="(xx) xxxx - xxxx" />
   </datatype>
   
  </column>
  
  <!-- Date -->
  <column name="last_update" type="datetime">
   <datatype name="date">
    <option name="start" value="today" />
    <option name="modify" value="+1 hour" />
    <option name="max" value="+10 weeks" />
   </datatype>
  </column>
  
 </table>
 
 
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Category Table
  
  When categorising for example move genres you should ask yourself does this need a semantic meaning?
  To a database word like 'short' is the same as string of text 'torohs' , if your testing a client side
  search box, random text would be a hindrence.
  
  I have shown below how to combine the alternate selector with constant datatype. But be aware below
  I have 29 movie categories and have also set generate to 29. If generate was set to 100, it would repeat
  category names.
  
  If you had many many categoires, I recommend that your write your own type and pull data from another source.
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="category" generate="29">
  
  <column name="category_id" type="integer">
   <datatype name="autoincrement">
   </datatype>
  </column>
  
  <column name="name" type="string">
     <alternate step="1">
      <datatype name="constant_string"><option name="value" value="short" /></datatype>
      <datatype name="constant_string"><option name="value" value="drama" /></datatype>
      <datatype name="constant_string"><option name="value" value="comedy" /></datatype>
      <datatype name="constant_string"><option name="value" value="documentary" /></datatype>
      <datatype name="constant_string"><option name="value" value="adult" /></datatype>
      <datatype name="constant_string"><option name="value" value="romance" /></datatype>
      <datatype name="constant_string"><option name="value" value="action" /></datatype>
      <datatype name="constant_string"><option name="value" value="animation" /></datatype>
      <datatype name="constant_string"><option name="value" value="thriller" /></datatype>
      <datatype name="constant_string"><option name="value" value="family" /></datatype>
      <datatype name="constant_string"><option name="value" value="crime" /></datatype>
      <datatype name="constant_string"><option name="value" value="music" /></datatype>
      <datatype name="constant_string"><option name="value" value="adventure" /></datatype>
      <datatype name="constant_string"><option name="value" value="horror" /></datatype>
      <datatype name="constant_string"><option name="value" value="fantasy" /></datatype>
      <datatype name="constant_string"><option name="value" value="mystery" /></datatype>
      <datatype name="constant_string"><option name="value" value="sci-fi" /></datatype>
      <datatype name="constant_string"><option name="value" value="biography" /></datatype>
      <datatype name="constant_string"><option name="value" value="sport" /></datatype>
      <datatype name="constant_string"><option name="value" value="musical" /></datatype>
      <datatype name="constant_string"><option name="value" value="western" /></datatype>
      <datatype name="constant_string"><option name="value" value="history" /></datatype>
      <datatype name="constant_string"><option name="value" value="war" /></datatype>
      <datatype name="constant_string"><option name="value" value="reality-tv" /></datatype>
      <datatype name="constant_string"><option name="value" value="news" /></datatype>
      <datatype name="constant_string"><option name="value" value="talk-show" /></datatype>
      <datatype name="constant_string"><option name="value" value="game-show" /></datatype>
      <datatype name="constant_string"><option name="value" value="film-noir" /></datatype>
      <datatype name="constant_string"><option name="value" value="lifestyle" /></datatype>
      <datatype name="constant_string"><option name="value" value="experimental" /></datatype>
     </alternate>
  </column>
  
  <column name="last_update" type="datetime">
   <datatype name="date">
    <option name="start" value="today" />
    <option name="modify" value="+1 hour" />
   </datatype>
  </column>
 </table>
 
 

 
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Customer Table
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="customer" generate="1000">
  
  <column name="customer_id" type="integer">
   <datatype name="autoincrement">
   </datatype>
  </column>
  
  <column name="address_id" type="smallint">
   <foreign-key name="customer.address" foreignColumn="address_id" foreignTable="address" />
  </column>
  
  <column name="store_id" type="boolean">
   <foreign-key name="customer.store" foreignColumn="store_id" foreignTable="store" />
  </column>
  
  <column name="first_name" type="string">
   <datatype name="people">
    <option name="format" value="{lname}" />
   </datatype>
  </column>
  
  <column name="last_name" type="string">
   <datatype name="people">
    <option name="format" value="{fname}" />
   </datatype>
  </column>
  
  <column name="email" type="string">
     <datatype name="email" >
       <option name="format" value="{fname}{lname}@{alpha1}.{domain}" />
       <option name="params" value='{"alpha1":"ccCCC"}'  />
    </datatype>
  </column>
  
  <!--
  For active column I want a mix of extactly 10% disabled 90% enabled
  by using the swap selector I can ensure the first 900 are enabled (true)
  and the next 100 false. Given we generate 1000 (900 + 100). 
  -->
  <column name="active" type="boolean">
   <swap>
     <when switch="900">
      <datatype name="boolean">
       <option name="value" value="true" />
      </datatype>
     </when>
     <when switch="100">
        <datatype name="boolean">
       <option name="value" value="false" />
      </datatype>
     </when>
   </swap>
  </column>
  
  <column name="create_date" type="datetime">
   <datatype name="datetime">
    <option name="start" value="today" />
    <option name="modify" value="+1 hour" />
   </datatype>
  </column>
  
  <column name="last_update" type="datetime">
   <datatype name="datetime">
    <option name="start" value="today" />
    <option name="modify" value="+1 minute" />
   </datatype>
  </column>
  
 </table>
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Film Table
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="film" generate="0">
  
  <column name="film_id" type="smallint">
   <datatype name="autoincrement">
   </datatype>
  </column>
  
  <column name="language_id" type="boolean">
   <foreign-key name="file.language" foreignColumn="language_id" foreignTable="language"  />
  </column>
  
  <!---
  Edge Case: While this relationship is ok, better design would be to mark a language on the film_language join
  table as an original language. 
  
  To select a value we have three options :
   1. Use a another foreign-key to guarantee consistency.
   2. Pull data from another source.
   3. Use a number range (only works if its ok to assign fixed range).
   
   In this case I used a number range and pick selector, I have split the range into two 1-50 , 51-100. Using pick selector
   the first range will occur more frequently than the later.
  
  -->
  <column name="original_language_id" type="boolean">
   <pick probability ="70">
    <datatype name="range">
     <option name="max" value="50" />
     <option name="min" value="1" />
     <option name="step" value="1" />
    </datatype>
    <datatype name="range">
     <option name="max" value="100" />
     <option name="min" value="51" />
     <option name="step" value="1" />
    </datatype>
   </pick>
  </column>
  
  <column name="title" type="string">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <!--
  With description columns , you need to ask yourself do you need semantic meaning?
  
  I don't and have used the `Text` type with random selector. This configuration will
  pick at random 1,2 or 3 paragraph text block.
  -->
  <column name="description" type="text">
   <random>
    <datatype name="text">
     <option name="paragraphs" value="1" />
    </datatype>
    <datatype name="text">
     <option name="paragraphs" value="2" />
    </datatype>
    <datatype name="text">
     <option name="paragraphs" value="3" />
    </datatype>
   </random>
  </column>
  
  
  <column name="release_year" type="date">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="rental_duration" type="boolean">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="rental_rate" type="decimal">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="length" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="replacement_cost" type="decimal">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="rating" type="string">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="special_features" type="string">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="last_update" type="datetime">
   <datatype name="datetime">
    <option name="start" value="today" />
    <option name="modify" value="+1 minute" />
   </datatype>
  </column>
 </table>

 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Film Actor
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="film_actor" generate="0">
  <column name="actor_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="film_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>

 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
 File Category (Join Table)  
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="film_category" generate="0">
  <column name="film_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="category_id" type="boolean">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
 File Text  
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="film_text" generate="0">
  <column name="film_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="title" type="string">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="description" type="text">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
 File Inventory  
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="inventory" generate="0">
  <column name="inventory_id" type="integer">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="store_id" type="boolean">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="film_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>
 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
 Language Table 
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="language" generate="0">
  <column name="language_id" type="boolean">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="name" type="string">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>

 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
 Payment Table 
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="payment" generate="0">
  <column name="payment_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="rental_id" type="integer">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="customer_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="staff_id" type="boolean">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="amount" type="decimal">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="payment_date" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>
 
  
  
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Rental Table
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
  
 <table name="rental" generate="0">
  <column name="rental_id" type="integer">
   <datatype name="autoincrement">
   </datatype>
  </column>
  <column name="staff_id" type="boolean">
   <foreign-key name="rental.staff" foreignColumn="staff_id" foreignTable="staff" />
  </column>
  <column name="inventory_id" type="integer">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="customer_id" type="smallint">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="rental_date" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="return_date" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  <column name="last_update" type="datetime">
   <datatype name="alphanumeric">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
 </table>
 

 
 <!--///////////////////////////////////////////////////////////////////////////////////////////////////
  Staff Table
 
 
 /////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="staff" generate="1000">
 
  <column name="staff_id" type="boolean">
   <datatype name="autoincrement">
    <option name="start" value="0" />
   </datatype>
  </column>
  
  <column name="store_id" type="boolean">
   <foreign-key name="staff.store" foreignColumn="store_id" foreignTable="store" />
  </column>
  
  <column name="address_id" type="smallint">
   <foreign-key name="staff.address" foreignColumn="address_id" foreignTable="address" />
  </column>
  
  <column name="first_name" type="string">
   <datatype name="people">
    <option  name="format" value="{fname}" />
   </datatype>
  </column>
  
  <column name="last_name" type="string">
   <datatype name="people">
    <option  name="format" value="{lname}" />
   </datatype>
  </column>
  
  <column name="picture" type="blob">
   <datatype name="alphanumeric">
    <option  name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="email" type="string">
     <datatype name="email" >
       <option name="format" value="{fname}{lname}@{alpha1}.{domain}" />
       <option name="params" value='{"alpha1":"ccCCC"}'  />
    </datatype>
  </column>
  
  <!--
  For active column I want a mix of extactly 10% disabled 90% enabled
  by using the swap selector I can ensure the first 900 are enabled (true)
  and the next 100 false. Given we generate 1000 (900 + 100). 
  -->
  <column name="active" type="boolean">
   <swap>
     <when switch="900">
      <datatype name="boolean">
       <option name="value" value="true" />
      </datatype>
     </when>
     <when switch="100">
        <datatype name="boolean">
       <option name="value" value="false" />
      </datatype>
     </when>
   </swap>
  </column>
  
  <!--
  It may seem like a good idea to use a foreign key to the email column. This would be known as a self reference
  and have an error thrown.
  
  Use a template column instead in these situations. The template column has a file option which point to the template file.
  
  -->
  <column name="username" type="string">
    <datatype name="template">
     <option name="file" value="staff.username.twig" />
    </datatype>
  </column>
  
  
  <!--
   Where using a custom type password. The extension type can be fond under extension/faker/type.
    
   Password have strong constrains you will need to map these into the custom type. Or you may have
   a list of valid passwords to use.
  -->
  <column name="password" type="string">
   <datatype name="password">
    <option name="format" value="ccccc" />
   </datatype>
  </column>
  
  <column name="last_update" type="datetime">
   <datatype name="datetime">
    <option name="start"  value="today" />
    <option name="modify" value="+1 minute" />
   </datatype>
  </column>
 </table>
  
  
  <!--////////////////////////////////////////////////////////////////////////////////////////////////////////
   Store Table
  
   Nothing new here, might want to take note of manager_staff_id column (commented out)
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////-->
 
 <table name="store" generate="100">
  <column name="store_id" type="integer">
   <datatype name="autoincrement">
    <option name="start" value="0" />
   </datatype>
  </column>
  <!--
  Avoid situations like this, for each store we want to assign a manager from staff roster (staff table)
  but if we use a foreign key to staff table we create a circular reference as the staff table has a relation
  back to store chicken and the egg.
 
  Again how can you setup a store if there are no staff to assign, and how can you setup a staff record if there is no
  store to assign them. If you make the relationship optional, it may work but should stick out as a code smell.
   
  Applying rules of normilization this relationship should be sent to a join table. If your unable to do this
  do not use foreign key, use an autoincrement and set a max and start coincide with values generated from staff table. 
  
  <column name="manager_staff_id" type="integer">
   <foreign-key name="store.manager.staff" foreignColumn="staff_id" foreignTable="staff" />
  </column>
  -->
  <column name="address_id" type="smallint">
   <foreign-key name="store.address" foreignColumn="address_id" foreignTable="address" />
  </column>
  <column name="last_update" type="datetime">
   <datatype name="datetime">
    <option name="start" value="today" />
    <option name="modify" value="+1 minute" />
   </datatype>
  </column>
 </table>


</schema>
